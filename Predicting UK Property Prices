{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.4.0"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":11209107,"sourceType":"datasetVersion","datasetId":6999195}],"dockerImageVersionId":30751,"isInternetEnabled":true,"language":"r","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"#  Predicting UK Property Prices Using Machine Learning in R\n\n##  Business Objective\nThe goal of this project is to support real estate professionals, investors, and policymakers in estimating property prices across the UK. By leveraging machine learning models trained on historical housing transaction data, we aim to improve the accuracy and efficiency of property price predictions.\n\n---\n\n##  Data Loading & Initial Exploration\n\nWe'll begin by loading the necessary libraries and reading the pre-cleaned dataset, which contains over 1.6 million property transactions from 1995 to 2023.\n","metadata":{}},{"cell_type":"code","source":"library(tidyverse)\nlibrary(lubridate)\n\n# Load cleaned property data\nproperty_data <- read_csv(\"/kaggle/input/uk-housing-cleaned/property_data_clean.csv\")\n\n# Preview\nglimpse(property_data)\nsummary(property_data)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-29T19:50:13.757830Z","iopub.execute_input":"2025-03-29T19:50:13.759341Z","iopub.status.idle":"2025-03-29T19:50:26.256688Z","shell.execute_reply":"2025-03-29T19:50:26.255284Z"}},"outputs":[{"name":"stderr","text":"\u001b[1mRows: \u001b[22m\u001b[34m1621679\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m18\u001b[39m\n\u001b[36m──\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36m────────────────────────────────────────────────────────\u001b[39m\n\u001b[1mDelimiter:\u001b[22m \",\"\n\u001b[31mchr\u001b[39m  (15): Transaction_ID, Postcode, Property_Type, Old_New, Duration, PAON,...\n\u001b[32mdbl\u001b[39m   (2): Price, Year\n\u001b[34mdate\u001b[39m  (1): Date_of_Transfer\n\n\u001b[36mℹ\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n\u001b[36mℹ\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n","output_type":"stream"},{"name":"stdout","text":"Rows: 1,621,679\nColumns: 18\n$ Transaction_ID    \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"{E104A9E7-1D6A-4D7F-B24F-5A064FCE6917}\", \"{748F870E…\n$ Price             \u001b[3m\u001b[90m<dbl>\u001b[39m\u001b[23m 36500, 74000, 13000, 29950, 26500, 52000, 121250, 11…\n$ Date_of_Transfer  \u001b[3m\u001b[90m<date>\u001b[39m\u001b[23m 1995-06-09, 1995-01-12, 1995-04-07, 1995-03-31, 199…\n$ Postcode          \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"FY4 1DL\", \"RH2 9NF\", \"CT9 1XR\", \"BH1 4BD\", \"BS23 3D…\n$ Property_Type     \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F…\n$ Old_New           \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"N\", \"Y\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"Y\", \"N\", \"N\", \"N…\n$ Duration          \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L…\n$ PAON              \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"CLARENCE COURT\", \"SOMERS PLACE, 83 - 85\", \"ARLINGTO…\n$ SAON              \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"28\", \"FLAT 21\", \"FLAT 7A\", \"FLAT 1\", \"FLAT 8\", \"22\"…\n$ Street            \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"RAWCLIFFE STREET\", \"REIGATE HILL\", \"ALL SAINTS AVEN…\n$ Locality          \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"BLACKPOOL\", \"REIGATE\", \"MARGATE\", \"BOURNEMOUTH\", \"W…\n$ Town_City         \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"BLACKPOOL\", \"REIGATE\", \"MARGATE\", \"BOURNEMOUTH\", \"W…\n$ District          \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"BLACKPOOL\", \"REIGATE AND BANSTEAD\", \"THANET\", \"BOUR…\n$ County            \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"BLACKPOOL\", \"SURREY\", \"KENT\", \"BOURNEMOUTH\", \"AVON\"…\n$ PPD_Category_Type \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A…\n$ Record_Status     \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A…\n$ Year              \u001b[3m\u001b[90m<dbl>\u001b[39m\u001b[23m 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995…\n$ Month             \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"Jun\", \"Jan\", \"Apr\", \"Mar\", \"Dec\", \"Jul\", \"May\", \"No…\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":" Transaction_ID         Price           Date_of_Transfer       Postcode        \n Length:1621679     Min.   :      100   Min.   :1995-01-01   Length:1621679    \n Class :character   1st Qu.:    85000   1st Qu.:2001-08-17   Class :character  \n Mode  :character   Median :   141000   Median :2004-10-08   Mode  :character  \n                    Mean   :   189337   Mean   :2005-09-07                     \n                    3rd Qu.:   222000   3rd Qu.:2007-12-03                     \n                    Max.   :330000000   Max.   :2023-04-25                     \n Property_Type        Old_New            Duration             PAON          \n Length:1621679     Length:1621679     Length:1621679     Length:1621679    \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n     SAON              Street            Locality          Town_City        \n Length:1621679     Length:1621679     Length:1621679     Length:1621679    \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   District            County          PPD_Category_Type  Record_Status     \n Length:1621679     Length:1621679     Length:1621679     Length:1621679    \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n      Year         Month          \n Min.   :1995   Length:1621679    \n 1st Qu.:2001   Class :character  \n Median :2004   Mode  :character  \n Mean   :2005                     \n 3rd Qu.:2007                     \n Max.   :2023                     "},"metadata":{}}],"execution_count":3},{"cell_type":"markdown","source":"## Feature Engineering\n\nWe extract and engineer features that are likely to influence property prices:\n- **Year** and **Month** of transaction (from `Date_of_Transfer`)\n- **Property_Type** and **County** as categorical variables\n\nWe also select a focused subset of variables for modeling.\n","metadata":{}},{"cell_type":"code","source":"# Load required packages\nlibrary(tidyverse)\nlibrary(lubridate)\n\n# Read cleaned dataset\nproperty_data <- read_csv(\"/kaggle/input/uk-housing-cleaned/property_data_clean.csv\")\n\n# Preview structure\nglimpse(property_data)\nsummary(property_data)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-29T22:32:26.569092Z","iopub.execute_input":"2025-03-29T22:32:26.570456Z","iopub.status.idle":"2025-03-29T22:32:38.439632Z","shell.execute_reply":"2025-03-29T22:32:38.438254Z"}},"outputs":[{"name":"stderr","text":"── \u001b[1mAttaching core tidyverse packages\u001b[22m ──────────────────────── tidyverse 2.0.0 ──\n\u001b[32m✔\u001b[39m \u001b[34mdplyr    \u001b[39m 1.1.4     \u001b[32m✔\u001b[39m \u001b[34mreadr    \u001b[39m 2.1.5\n\u001b[32m✔\u001b[39m \u001b[34mforcats  \u001b[39m 1.0.0     \u001b[32m✔\u001b[39m \u001b[34mstringr  \u001b[39m 1.5.1\n\u001b[32m✔\u001b[39m \u001b[34mggplot2  \u001b[39m 3.5.1     \u001b[32m✔\u001b[39m \u001b[34mtibble   \u001b[39m 3.2.1\n\u001b[32m✔\u001b[39m \u001b[34mlubridate\u001b[39m 1.9.3     \u001b[32m✔\u001b[39m \u001b[34mtidyr    \u001b[39m 1.3.1\n\u001b[32m✔\u001b[39m \u001b[34mpurrr    \u001b[39m 1.0.2     \n── \u001b[1mConflicts\u001b[22m ────────────────────────────────────────── tidyverse_conflicts() ──\n\u001b[31m✖\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mfilter()\u001b[39m masks \u001b[34mstats\u001b[39m::filter()\n\u001b[31m✖\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mlag()\u001b[39m    masks \u001b[34mstats\u001b[39m::lag()\n\u001b[36mℹ\u001b[39m Use the conflicted package (\u001b[3m\u001b[34m<http://conflicted.r-lib.org/>\u001b[39m\u001b[23m) to force all conflicts to become errors\n\u001b[1mRows: \u001b[22m\u001b[34m1621679\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m18\u001b[39m\n\u001b[36m──\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36m────────────────────────────────────────────────────────\u001b[39m\n\u001b[1mDelimiter:\u001b[22m \",\"\n\u001b[31mchr\u001b[39m  (15): Transaction_ID, Postcode, Property_Type, Old_New, Duration, PAON,...\n\u001b[32mdbl\u001b[39m   (2): Price, Year\n\u001b[34mdate\u001b[39m  (1): Date_of_Transfer\n\n\u001b[36mℹ\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n\u001b[36mℹ\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n","output_type":"stream"},{"name":"stdout","text":"Rows: 1,621,679\nColumns: 18\n$ Transaction_ID    \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"{E104A9E7-1D6A-4D7F-B24F-5A064FCE6917}\", \"{748F870E…\n$ Price             \u001b[3m\u001b[90m<dbl>\u001b[39m\u001b[23m 36500, 74000, 13000, 29950, 26500, 52000, 121250, 11…\n$ Date_of_Transfer  \u001b[3m\u001b[90m<date>\u001b[39m\u001b[23m 1995-06-09, 1995-01-12, 1995-04-07, 1995-03-31, 199…\n$ Postcode          \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"FY4 1DL\", \"RH2 9NF\", \"CT9 1XR\", \"BH1 4BD\", \"BS23 3D…\n$ Property_Type     \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F…\n$ Old_New           \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"N\", \"Y\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"Y\", \"N\", \"N\", \"N…\n$ Duration          \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L…\n$ PAON              \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"CLARENCE COURT\", \"SOMERS PLACE, 83 - 85\", \"ARLINGTO…\n$ SAON              \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"28\", \"FLAT 21\", \"FLAT 7A\", \"FLAT 1\", \"FLAT 8\", \"22\"…\n$ Street            \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"RAWCLIFFE STREET\", \"REIGATE HILL\", \"ALL SAINTS AVEN…\n$ Locality          \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"BLACKPOOL\", \"REIGATE\", \"MARGATE\", \"BOURNEMOUTH\", \"W…\n$ Town_City         \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"BLACKPOOL\", \"REIGATE\", \"MARGATE\", \"BOURNEMOUTH\", \"W…\n$ District          \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"BLACKPOOL\", \"REIGATE AND BANSTEAD\", \"THANET\", \"BOUR…\n$ County            \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"BLACKPOOL\", \"SURREY\", \"KENT\", \"BOURNEMOUTH\", \"AVON\"…\n$ PPD_Category_Type \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A…\n$ Record_Status     \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A…\n$ Year              \u001b[3m\u001b[90m<dbl>\u001b[39m\u001b[23m 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995…\n$ Month             \u001b[3m\u001b[90m<chr>\u001b[39m\u001b[23m \"Jun\", \"Jan\", \"Apr\", \"Mar\", \"Dec\", \"Jul\", \"May\", \"No…\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":" Transaction_ID         Price           Date_of_Transfer       Postcode        \n Length:1621679     Min.   :      100   Min.   :1995-01-01   Length:1621679    \n Class :character   1st Qu.:    85000   1st Qu.:2001-08-17   Class :character  \n Mode  :character   Median :   141000   Median :2004-10-08   Mode  :character  \n                    Mean   :   189337   Mean   :2005-09-07                     \n                    3rd Qu.:   222000   3rd Qu.:2007-12-03                     \n                    Max.   :330000000   Max.   :2023-04-25                     \n Property_Type        Old_New            Duration             PAON          \n Length:1621679     Length:1621679     Length:1621679     Length:1621679    \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n     SAON              Street            Locality          Town_City        \n Length:1621679     Length:1621679     Length:1621679     Length:1621679    \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   District            County          PPD_Category_Type  Record_Status     \n Length:1621679     Length:1621679     Length:1621679     Length:1621679    \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n      Year         Month          \n Min.   :1995   Length:1621679    \n 1st Qu.:2001   Class :character  \n Median :2004   Mode  :character  \n Mean   :2005                     \n 3rd Qu.:2007                     \n Max.   :2023                     "},"metadata":{}}],"execution_count":3},{"cell_type":"code","source":"# Prepare dataset\nmodel_data <- property_data %>%\n  mutate(\n    Year = year(Date_of_Transfer),\n    Month = month(Date_of_Transfer),\n    Property_Type = as.factor(Property_Type),\n    County = as.factor(County)\n  ) %>%\n  select(Price, Property_Type, County, Year, Month) %>%\n  na.omit()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-29T22:33:01.470240Z","iopub.execute_input":"2025-03-29T22:33:01.471660Z","iopub.status.idle":"2025-03-29T22:33:03.350409Z","shell.execute_reply":"2025-03-29T22:33:03.348792Z"}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"#Feature Engineering\nmodel_data <- property_data %>%\n  mutate(\n    Year = year(Date_of_Transfer),\n    Month = month(Date_of_Transfer),\n    Property_Type = as.factor(Property_Type),\n    County = as.factor(County)\n  ) %>%\n  select(Price, Property_Type, County, Year, Month) %>%\n  na.omit()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-29T19:50:26.259713Z","iopub.execute_input":"2025-03-29T19:50:26.260883Z","iopub.status.idle":"2025-03-29T19:50:28.597401Z","shell.execute_reply":"2025-03-29T19:50:28.595761Z"}},"outputs":[],"execution_count":4},{"cell_type":"markdown","source":"## Train-Test Split\n\nWe partition the dataset into training (80%) and test (20%) sets using stratified sampling based on the `Price` variable.\n","metadata":{}},{"cell_type":"code","source":"#Train-Test Split\nlibrary(caret)\n\nset.seed(42)\ntrain_index <- createDataPartition(model_data$Price, p = 0.8, list = FALSE)\ntrain_data <- model_data[train_index, ]\ntest_data <- model_data[-train_index, ]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-29T19:50:28.599728Z","iopub.execute_input":"2025-03-29T19:50:28.600916Z","iopub.status.idle":"2025-03-29T19:50:31.773032Z","shell.execute_reply":"2025-03-29T19:50:31.771372Z"}},"outputs":[{"name":"stderr","text":"Loading required package: lattice\n\n\nAttaching package: ‘caret’\n\n\nThe following object is masked from ‘package:purrr’:\n\n    lift\n\n\nThe following object is masked from ‘package:httr’:\n\n    progress\n\n\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"# Load caret for data splitting\nlibrary(caret)\n\n# Set seed for reproducibility\nset.seed(42)\n\n# Create partition\ntrain_index <- createDataPartition(model_data$Price, p = 0.8, list = FALSE)\ntrain_data <- model_data[train_index, ]|\ntest_data <- model_data[-train_index, ]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-29T22:35:48.124164Z","iopub.execute_input":"2025-03-29T22:35:48.125571Z","iopub.status.idle":"2025-03-29T22:35:49.518487Z","shell.execute_reply":"2025-03-29T22:35:49.516910Z"}},"outputs":[{"ename":"ERROR","evalue":"Error in model_data[train_index, ] | test_data <- model_data[-train_index, : could not find function \"|<-\"\n","traceback":["Error in model_data[train_index, ] | test_data <- model_data[-train_index, : could not find function \"|<-\"\nTraceback:\n"],"output_type":"error"}],"execution_count":7},{"cell_type":"markdown","source":"## Model Training: Random Forest\n\nTo build a robust non-linear model, we use the `Random Forest` algorithm. Due to the high cardinality of the `County` variable (many levels), we exclude it for the Random Forest model. We later retrain using `ranger`, a more efficient implementation, allowing high-cardinality factors.\n","metadata":{}},{"cell_type":"code","source":"# Drop County due to factor level limit in randomForest\ntrain_data_rf <- train_data %>% select(-County)\ntest_data_rf <- test_data %>% select(-County)\n\n# Load randomForest package\nlibrary(randomForest)\n\n# Train Random Forest model\nrf_model <- randomForest(\n  Price ~ .,\n  data = train_data_rf,\n  ntree = 100,\n  importance = TRUE\n)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-29T22:36:53.562467Z","iopub.execute_input":"2025-03-29T22:36:53.563993Z","iopub.status.idle":"2025-03-29T22:51:42.716524Z","shell.execute_reply":"2025-03-29T22:51:42.714765Z"}},"outputs":[{"name":"stderr","text":"randomForest 4.7-1.1\n\nType rfNews() to see new features/changes/bug fixes.\n\n\nAttaching package: ‘randomForest’\n\n\nThe following object is masked from ‘package:dplyr’:\n\n    combine\n\n\nThe following object is masked from ‘package:ggplot2’:\n\n    margin\n\n\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}